    Extraer el texto y revisar detalladamente la informacion contenida en los archivos tipo docx que estan en la carpeta documentos.
    la descripción del dominio de la aplicación se encuentra en el archivo "descripciónDelDominio.docx"
    la especificación de requerimientos de software se encuentra en el archivo "Especificacion de Requerimientos de Software.docx"
    el modelo de dominio se encuentra en la carpeta ModeloDominioRedSismica
    la descripción de los roles de usuario: Nombres, permisos y funciones de cada rol estan en los archivos de la carpeta "documentos"

    lenguaje Python 3.11.9 instalado,

    sistema operativo: Windows,
    IDE: Visual Studio Code,
    gestor de base de datos: SQLite,
    gestor de entornos virtuales: venv,

    crear un entorno virtual en la raíz del proyecto,
    nombre del entorno virtual: venv,
    
    instalar sqlite3,
    configuración de la base de datos: SQLite,
    crear base de datos,
    nombre de la base de datos: "redSismica.db",
    crear tablas según el modelo de dominio,
    poblar tablas con datos de prueba,

    instalar Django 4.2.5,
    framework: django configurado en español,
    estructura de carpetas: estándar de Django,
    crear un proyecto Django con el nombre "proyecto_inspeccion",
    crear una aplicación Django con el nombre "inspeccion",

    idioma: preferentemente español,

    extraer y analizar todos los roles mencionados en los documentos con autenticación de usuario y contraseña estándar de Django, 
        personalizar según los roles encontrados en los documentos, 
        estructura de las apps Django stándar,
        autenticación solo la estándar,
    crear un superusuario para el proyecto,
    proyecto para desarrollo local únicamente,
    
    el tema visual para el fondo de la interfaz web debe usar las imágenes que contienen los documentos de la carpeta documentos,
    interfaz de usuario: web,

update: python.exe -m pip install --upgrade pip

crear el archivo requirements.txt con las dependencias necesarias para el proyecto,
    crear el archivo .gitignore para ignorar archivos innecesarios,
    crear el archivo README.md con una breve descripción del proyecto,
    
implementar el caso de uso "Dar cierre a orden de inspección de ES" (Nro. 37)  que se encuentra en el archivo Especificacion de requerimientos de software en "Descripción Detallada de Requerimientos", "Requerimientos Funcionales"
cumplir con los requerimientos funcionales del caso de uso 37
crear una clase interfaz para la vista de cierre de orden de inspección de ES
crear una clase controlador para la vista de cierre de orden de inspección de ES

pruebas automáticas, documentación técnica o despliegue